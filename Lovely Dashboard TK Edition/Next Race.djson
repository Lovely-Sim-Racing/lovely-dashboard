{"Variables":{"DashboardVariables":[{"VariableName":"folderName","EvaluateOnlyOnce":false,"OverrideWithParentDashboardVariableWhenAvailable":true,"ValueExpression":{"Expression":""}}]},"DashboardDebugManager":{},"Version":2,"Id":"a12cb41c-662f-4b61-842f-6771f87bd0b3","BaseHeight":24,"BaseWidth":730,"BackgroundColor":"#FF000000","Screens":[{"RenderingSkip":0,"Name":"Screen","InGameScreen":true,"IdleScreen":true,"PitScreen":false,"ScreenId":"fb809a1a-3df7-444b-b24e-3996bcb227fa","AllowOverlays":true,"IsForegroundLayer":false,"IsOverlayLayer":false,"OverlayTriggerExpression":{"Expression":""},"ScreenEnabledExpression":{"Expression":""},"OverlayMaxDuration":0,"OverlayMinDuration":0,"IsBackgroundLayer":false,"BackgroundColor":"#FF000000","Items":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowColor":"#FF696969","Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"LFM | SIM | Upcoming Race Series | #00000 | Split X","TextColor":"#FFFFFFFF","HorizontalAlignment":0,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":24.0,"Left":70.0,"Top":0.0,"Visible":true,"Width":660.0,"Name":"TextItem3","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('lfmID') ) {\r\n\t\r\n\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\tif (lfm.race['0'] != null ) {\r\n\t\t// 1 = ACC\r\n\t\t// 2 = rF2\r\n\t\t// 3 = AC\r\n\t\t\r\n\t\tconst sim = (id) => {\r\n\t\t\tswitch (id) {\r\n\t\t\t\tcase 1: \r\n\t\t\t\t\treturn 'LFM : ACC | '\r\n\t\t\t\tcase 2: \r\n\t\t\t\t\treturn 'LFM : rF2 | '\r\n\t\t\t\tcase 3: \r\n\t\t\t\t\treturn 'LFM : AC | '\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\treturn sim(lfm.sim.sim_id) + lfm.race['0'].event_name.trim() + ' | #' + lfm.race['0'].race_id + ' | Split ' + lfm.race['0'].split\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n\r\n} else {\r\n\treturn ''\r\n}"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowColor":"#FF696969","Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"00:00","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FF141414","BorderStyle":{"RadiusTopLeft":3,"RadiusTopRight":3,"RadiusBottomLeft":3,"RadiusBottomRight":3},"Height":24.0,"Left":0.0,"Top":0.0,"Visible":true,"Width":60.0,"Name":"Race Time","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('lfmID') ) {\r\n\t\r\n\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\t\r\n\tif (lfm.race['0'] != null ) {\r\n\t\tvar raceTime = new Date(lfm.race['0'].race_date).toString()\r\n\t\tvar getRaceTime = new Date(raceTime)\r\n\t\treturn format(getRaceTime.getHours(), '00') + ':' + format(getRaceTime.getMinutes(), '00')\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n\t\r\n} else {\r\n\treturn ''\r\n}"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowColor":"#FF696969","Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"00:00","TextColor":"#FF000000","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FFFFFFFF","BorderStyle":{"RadiusTopLeft":3,"RadiusTopRight":3,"RadiusBottomLeft":3,"RadiusBottomRight":3},"Height":24.0,"Left":0.0,"Top":0.0,"Visible":false,"Width":60.0,"Name":"Countdown","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"BackgroundColor":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('lfmID') ) {\r\n\t\r\n\tvar lfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\t\r\n\tif (lfm.race['0'] != null ) {\r\n\t\r\n\t\tconst raceTime = lfm.race['0'].race_date\r\n\t\tvar countdownTo = new Date(raceTime)\r\n\t\tvar now = new Date().getTime()\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\t\t\t\r\n\t\tif (timeDiff < 300000) { // Show if under 5 minutes\r\n\t\t\treturn  '#FFFA0000'\r\n\t\t} else {\r\n\t\t\treturn '#FFFFFFFF'\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn 'Transparent'\r\n\t}\r\n \r\n} else {\r\n\treturn '#FFFFFFFF'\r\n}"},"Mode":2},"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('lfmID') ) {\r\n\t\r\n\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\t\r\n\tif (lfm.race['0'] != null ) {\r\n\t\tvar raceTime = lfm.race['0'].race_date\r\n\t\t\r\n\t\tvar countdownTo = new Date(raceTime).getTime();\r\n\t\tvar now = new Date().getTime();\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\r\n\t\tif (timeDiff <= 0 ) {\r\n\t\t\treturn 'OPEN'\r\n\t\t} else {\r\n\t\t\tvar days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n\t\t    var hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\t\t\tvar minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n\t\t\tvar seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\r\n\t\t\t\r\n\t\t\tvar nextRaceIn = format(minutes, '00') + ':' + format(seconds, '00')\r\n\t\t\treturn nextRaceIn\r\n\t\t}\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n \r\n} else {\r\n\treturn ''\r\n}"},"Mode":2},"TextColor":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('lfmID') ) {\r\n\t\r\n\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\t\r\n\tif (lfm.race['0'] != null ) {\r\n\t\tvar raceTime = lfm.race['0'].race_date\r\n\t\tvar countdownTo = new Date(raceTime)\r\n\t\tvar now = new Date().getTime()\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\t\t\t\r\n\t\tif (timeDiff < 300000) { // Show if under 5 minutes\r\n\t\t\treturn  '#FFFFFFFF'\r\n\t\t} else {\r\n\t\t\treturn '#FF000000'\r\n\t\t}\r\n\t} else {\r\n\t\treturn '#FF000000'\r\n\t}\r\n \r\n} else {\r\n\treturn '#FF000000'\r\n}"},"Mode":2},"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('lfmID') ) {\r\n\r\n\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\t\r\n\tif (lfm.race['0'] != null ) {\r\n\t\t\t\r\n\t\tvar raceTime = lfm.race['0'].race_date\r\n\t\tvar countdownTo = new Date(raceTime)\r\n\t\tvar now = new Date().getTime()\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\t\t\t\r\n\t\tif (timeDiff < 1800000 && timeDiff > -120000) { // Show if under 30 min AND over 2 min\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n \r\n} else {\r\n\treturn 0\r\n}"},"Mode":2}}}],"Visible":true,"Name":"Next LFM Race","RenderingSkip":256,"MinimumRefreshIntervalMS":2560.0,"Bindings":{"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( !ld_getSettings('lfmID') ) {\r\n\treturn 0\r\n} else {\r\n\r\n\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_lfm == null || json_lfm.startsWith('ERROR') ) { return 0 }\r\n\t\r\n\tconst lfm = JSON.parse(json_lfm)\r\n\r\n\tif ( lfm.race['0'] != null ) {\r\n\t\t// If there is a LFM race\r\n\t\t// Check to see if it's before Pitskill race\r\n\t \t\r\n\t \tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\t\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t\t// Break if error in JSON\r\n\t\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\t\tconst pitskill = JSON.parse(json_pitskill)\r\n\t \t\r\n\t \tif ( pitskill.payload == null ) {\r\n\t \t\t// There's no other race\r\n\t \t\treturn 1\r\n\t \t} else {\r\n\t \t\t// There's a Pitskil Race\r\n\t \t\t// Check to see which comes first\r\n\t \t\tlfmTime = new Date(lfm.race['0'].race_date).getTime()\r\n\t \t\tpitSkillTime = new Date(pitskill.payload['0'].start_date).getTime()\r\n\t \t\t\r\n\t \t\treturn ( lfmTime - pitSkillTime < 0 ) ? 1 : 0\r\n\t \t}\r\n\t \t\t \t\r\n\t} else {\r\n\t\t// No Race\r\n\t\treturn 0\r\n\t}\r\n\r\n}"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.Layer, SimHub.Plugins","Group":true,"Repetitions":0,"Childrens":[{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowColor":"#FF696969","Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"Pitskill.io | Upcoming Race Series - Week 7 - 6 - Split X | #0000 | PW: 00000","TextColor":"#FFFFFFFF","HorizontalAlignment":0,"VerticalAlignment":1,"BackgroundColor":"#00FFFFFF","Height":24.0,"Left":70.0,"Top":0.0,"Visible":true,"Width":660.0,"Name":"TextItem3","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('pitskillID') ) {\r\n\t\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\t\r\n\tif ( pitskill.payload != null ) {\r\n\t\t\r\n\t\treturn pitskill.payload['0'].event_registrations['0'].vehicle_registration.server.server_name + ' | PW: ' + pitskill.payload['0'].event_registrations['0'].vehicle_registration.server.server_password\r\n\t\t\t\t\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n\r\n} else {\r\n\treturn ''\r\n}"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowColor":"#FF696969","Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"00:00","TextColor":"#FFFFFFFF","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FF141414","BorderStyle":{"RadiusTopLeft":3,"RadiusTopRight":3,"RadiusBottomLeft":3,"RadiusBottomRight":3},"Height":24.0,"Left":0.0,"Top":0.0,"Visible":true,"Width":60.0,"Name":"Race Time","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('pitskillID') ) {\r\n\t\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\t\r\n\tif ( pitskill.payload != null ) {\r\n\t\tvar raceTime = new Date(pitskill.payload['0'].start_date).toString()\r\n\t\tvar getRaceTime = new Date(raceTime)\r\n\t\treturn format(getRaceTime.getHours(), '00') + ':' + format(getRaceTime.getMinutes(), '00')\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n\t\r\n} else {\r\n\treturn ''\r\n}"},"Mode":2}}},{"$type":"SimHub.Plugins.OutputPlugins.GraphicalDash.Models.TextItem, SimHub.Plugins","IsTextItem":true,"ShadowColor":"#FF696969","Font":"Roboto","FontWeight":"Bold","FontSize":18.0,"Text":"00:00","TextColor":"#FF000000","HorizontalAlignment":1,"VerticalAlignment":1,"BackgroundColor":"#FFFFFFFF","BorderStyle":{"RadiusTopLeft":3,"RadiusTopRight":3,"RadiusBottomLeft":3,"RadiusBottomRight":3},"Height":24.0,"Left":0.0,"Top":0.0,"Visible":true,"Width":60.0,"Name":"Countdown","RenderingSkip":0,"MinimumRefreshIntervalMS":0.0,"Bindings":{"BackgroundColor":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('pitskillID') ) {\r\n\t\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\t\r\n\tif ( pitskill.payload != null ) {\r\n\t\r\n\t\tconst raceTime = pitskill.payload['0'].start_date\r\n\t\tvar countdownTo = new Date(raceTime)\r\n\t\tvar now = new Date().getTime()\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\t\t\t\r\n\t\tif (timeDiff < 300000) { // Show if under 5 minutes\r\n\t\t\treturn  '#FFFA0000'\r\n\t\t} else {\r\n\t\t\treturn '#FFFFFFFF'\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn 'Transparent'\r\n\t}\r\n \r\n} else {\r\n\treturn '#FFFFFFFF'\r\n}"},"Mode":2},"Text":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( ld_getSettings('pitskillID') ) {\r\n\t\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\t\r\n\tif ( pitskill.payload != null ) {\r\n\t\tvar raceTime = pitskill.payload['0'].start_date\r\n\t\t\r\n\t\tvar countdownTo = new Date(raceTime).getTime();\r\n\t\tvar now = new Date().getTime();\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\r\n\t\tif (timeDiff <= 0 ) {\r\n\t\t\treturn 'OPEN'\r\n\t\t} else {\r\n\t\t\tvar days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n\t\t    var hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\t\t\tvar minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n\t\t\tvar seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\r\n\t\t\t\r\n\t\t\tvar nextRaceIn = format(minutes, '00') + ':' + format(seconds, '00')\r\n\t\t\treturn nextRaceIn\r\n\t\t}\r\n\t} else {\r\n\t\treturn ''\r\n\t}\r\n \r\n} else {\r\n\treturn ''\r\n}"},"Mode":2},"TextColor":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if ( ld_getSettings('pitskillID') ) {\r\n\t\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\t\r\n\tif ( pitskill.payload != null ) {\r\n\t\tvar raceTime = pitskill.payload['0'].start_date\r\n\t\tvar countdownTo = new Date(raceTime)\r\n\t\tvar now = new Date().getTime()\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\t\t\t\r\n\t\tif (timeDiff < 300000) { // Show if under 5 minutes\r\n\t\t\treturn  '#FFFFFFFF'\r\n\t\t} else {\r\n\t\t\treturn '#FF000000'\r\n\t\t}\r\n\t} else {\r\n\t\treturn '#FF000000'\r\n\t}\r\n \r\n} else {\r\n\treturn '#FF000000'\r\n}"},"Mode":2},"Visible":{"Formula":{"JSExt":3,"Interpreter":1,"Expression":"if ( ld_getSettings('pitskillID') ) {\r\n\t\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\t\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\t\r\n\tif ( pitskill.payload != null ) {\r\n\t\tvar raceTime = pitskill.payload['0'].start_date\r\n\t\tvar countdownTo = new Date(raceTime)\r\n\t\tvar now = new Date().getTime()\r\n\t\tvar timeDiff = countdownTo - now\r\n\t\t\t\t\t\r\n\t\tif (timeDiff < 1800000 && timeDiff > -120000) { // Show if under 30 min AND over 2 min\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t} else {\r\n\t\treturn 0\r\n\t}\r\n \r\n} else {\r\n\treturn 0\r\n}"},"Mode":2}}}],"Visible":false,"Name":"Next Pitskill Race","RenderingSkip":256,"MinimumRefreshIntervalMS":2560.0,"Bindings":{"Visible":{"Formula":{"JSExt":1,"Interpreter":1,"Expression":"if ( !ld_getSettings('pitskillID') ) {\r\n\treturn 0\r\n} else {\r\n\r\n\tpitskill_url = 'https://api.pitskill.io/api/events/upcomingRegistrations?id=' + ld_getSettings('pitskillID')\r\n\tconst json_pitskill = downloadstringasync(15000, pitskill_url)\r\n\r\n\t// Break if error in JSON\r\n\tif ( json_pitskill == null || json_pitskill.startsWith('ERROR') ) { return 0 }\r\n\t\r\n\tconst pitskill = JSON.parse(json_pitskill)\r\n\tif ( pitskill.payload != null ) {\r\n\t\t// If there is a Pitskill race\r\n\t\t// Check to see if it's before LFM race\r\n\t\tlfm_url = 'https://api2.lowfuelmotorsport.com/api/licenseWidgetUserData/' + ld_getSettings('lfmID')\r\n\t\tconst json_lfm = downloadstringasync(15000, lfm_url)\r\n\t\t\r\n\t\t// Break if error in JSON\r\n\t\tif ( json_lfm == null ) { return 0 }\r\n\t\t\r\n\t\tconst lfm = JSON.parse(json_lfm)\r\n\t\tif ( lfm.race['0'] == null ) {\r\n\t \t\t// There's no other race\r\n\t \t\treturn 1\r\n\t \t} else {\r\n\t \t\t// There's an LFM Race\r\n\t \t\t// Check to see which comes first\r\n\t \t\tlfmTime = new Date(lfm.race['0'].race_date).getTime()\r\n\t \t\tpitSkillTime = new Date(pitskill.payload['0'].start_date).getTime()\r\n\t \t\t\r\n\t \t\treturn ( pitSkillTime - lfmTime < 0 ) ? 1 : 0\r\n\t \t}\r\n\t\r\n\t} else {\r\n\t\t// No Race\r\n\t\treturn 0\r\n\t}\r\n}"},"Mode":2}}}],"MinimumRefreshIntervalMS":0.0}],"SnapToGrid":false,"HideLabels":false,"ShowForeground":true,"ForegroundOpacity":100.0,"ShowBackground":true,"BackgroundOpacity":100.0,"ShowBoundingRectangles":false,"GridSize":10,"Images":[],"Metadata":{"SimHubVersion":"9.2.4","ScreenCount":1.0,"InGameScreensIndexs":[0],"IdleScreensIndexs":[0],"MainPreviewIndex":0,"IsOverlay":false,"Width":730.0,"Height":24.0,"OverlaySizeWarning":false,"MetadataVersion":2.0,"EnableOnDashboardMessaging":true,"PitScreensIndexs":[]},"ShowOnScreenControls":true,"IsOverlay":false,"EnableClickThroughOverlay":true,"EnableOnDashboardMessaging":true}